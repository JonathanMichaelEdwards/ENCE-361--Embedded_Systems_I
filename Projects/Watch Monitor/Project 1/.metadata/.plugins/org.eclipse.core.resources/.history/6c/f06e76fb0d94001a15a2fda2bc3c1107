//  ==========================================================================
//  ENCE-361: Embedded Systems 1 (2020);  University of Canterbury
//  Project:  Personal Fitness Monitor Project
//
//  FILE NAME:     init.c
//  
//  Authors:       Jonathan Edwards, Riley Symon, Grace Kaye-Blake 
// 
//  Description:   
//  ==========================================================================



// Constants
#define CLOCK_20MHZ         20e6
#define SYSTICK_RATE_HZ     50
#define SLOWTICK_RATE_HZ    20  // changed rate
#define MAX_STR_LEN         16

// Global Varibles - ISR globals
static bool slowTick;



// -----------------------------------------------------------------------------
//                            Set the slow tick varible
// -----------------------------------------------------------------------------
void setSlowTick(bool _tick) 
{
    slowTick = _tick;
}


// -----------------------------------------------------------------------------
//                            Get the slow tick varible
// -----------------------------------------------------------------------------
bool getSlowTick(void) 
{
    return slowTick;
}


// -----------------------------------------------------------------------------
//                           Initialize the 20 MHz clock                           
// -----------------------------------------------------------------------------
void initClock(void)
{
    // Set the clock rate to 20 MHz
    SysCtlClockSet (SYSCTL_SYSDIV_10 | SYSCTL_USE_PLL | SYSCTL_OSC_MAIN |
                   SYSCTL_XTAL_16MHZ);
}


// -----------------------------------------------------------------------------
//                 ISR interrupt handler for the SysTick interrupt
// -----------------------------------------------------------------------------
void SysTickIntHandler(void)
{
    static uint8_t tickCount = 0;
    const uint8_t ticksPerSlow = SYSTICK_RATE_HZ / SLOWTICK_RATE_HZ;

    updateButtons ();                      // Poll buttons
    if (++tickCount >= ticksPerSlow) {     // Signal slow ticks
        tickCount = 0;
        setSlowTick(true);
    }
}


// -----------------------------------------------------------------------------
//                       Initialize the Interrupt Handler                       
// -----------------------------------------------------------------------------
void initSysTick(void)
{
    // Set up the period for the SysTick timer.  The SysTick timer period is
    // set as a function of the system clock.
    SysTickPeriodSet(CLOCK_20MHZ / SYSTICK_RATE_HZ);
    
    // Register the interrupt handler
    SysTickIntRegister(SysTickIntHandler);
    
    // Enable interrupt and device
    SysTickIntEnable();
    SysTickEnable();
}


/** -----------------------------------------------------------------------------
//                              Initialize Everything    
// 
// @param ptr_circBuff - Initialize x, y and z directions in a circular buffer
// ---------------------------------------------------------------------------*/
void init(CircBuff *circBuff)
{
    initClock();
    initSysTick();
    initUSB_UART();
    initButtons();
    OLEDInitialise();

    // Initialise circBuf
    initCircBuf(&circBuff->x, BUF_SIZE);
    initCircBuf(&circBuff->y, BUF_SIZE);
    initCircBuf(&circBuff->z, BUF_SIZE);

    initI2C();
    initAccl();
}

